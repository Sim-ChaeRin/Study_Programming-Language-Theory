📘 변수의 영역 핵심 요약


🔹 변수의 영역과 블록

  변수의 영역(scope): 프로그램에서 변수를 사용할 수 있는 범위를 의미
  
  블록(block): 영역을 구분하는 단위이며, 프로그램 문장들의 묶음
  
  블록의 시작 부분에는 변수 선언을 포함할 수 있음


🔹 지역변수와 비지역변수
  - 지역변수:	블록 안에서 선언된 변수임. 해당 블록 내에서만 사용 가능
  - 비지역변수:	블록 밖에서 선언되었지만 블록 안에서 사용할 수 있는 변수
  - 전역변수:	어떤 블록에도 속하지 않으며, 프로그램 전체에서 접근 가능

🔹 참조 환경 (Reference Environment)

 - 참조 환경: 프로그램의 특정 위치에서 사용할 수 있는 모든 변수들의 집합
  
 - 구성 요소 → 현재 블록의 모든 지역변수 + 접근 가능한 비지역변수로 구성


🔹 영역 규칙 (Scope Rule)

정의: 참조되는 변수의 선언 위치를 결정하는 방법

역할 → 현재 블록에서 선언되지 않은 자유변수가 어느 비지역 블록에 선언된 변수인지 찾거나 존재하지 않으면 오류로 판단함.


🔹 정적 영역 규칙 vs 동적 영역 규칙

  - 정적 영역 규칙 (Static Scope) :	정적 내포 관계 (프로그램의 문법적 구조)	컴파일 시점	수행 속도가 빠르고 안정적임 → 대부분의 언어가 사용함
  - 동적 영역 규칙 (Dynamic Scope):	동적 내포 관계 (실행 시 호출 순서)	수행 시점	실행 경로에 따라 참조되는 변수가 달라질 수 있음

🔹 영역 구멍 (Hole in Scope)

  정의: 비지역변수가 같은 이름의 지역변수에 의해 가려지는 현상
  
  예시 → 외부 변수 x가 있는데, 내부 블록에서 같은 이름 x를 선언하면 외부 x는 보이지 않게 됨


🔹 이름 공간 (Namespace)

  정의: 관련성 있는 변수나 함수를 하나의 묶음 단위로 관리하는 영역임.
  
  특징: 이름 공간 자체도 이름을 가짐 → 변수명 충돌 방지에 유용함.
  
  예시: C++에서 namespace 키워드로 이름 공간 지원함.
