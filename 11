📘 수식 핵심 요약


1. 수식이란?

  값을 나타내는 표현이다.
  
  즉, 프로그램에서 어떤 결과값을 만들어내는 것이 수식이다.
  
  예시
  
    단순 값: 10, "Hello"
    
    변수: x
    
    연산 포함: x + 5, a * b - 3

  👉 “수식은 값”, “문장은 동작”
  
  수식(Expression) → 계산 결과(값)를 만든다.
  
  문장(Statement) → 어떤 처리나 행동을 수행한다.
  
  예: x = 5; (변수에 값을 저장하는 “행동”)
  

2. 연산자와 피연산자

  연산자(operator): 계산이나 조작을 수행하는 기호
  
  피연산자(operand): 연산자가 다루는 값
  
    예: a + b
    
    + → 연산자
    
    a, b → 피연산자
    

3. 연산자의 종류

  산술 연산자: +, -, *, /, %(나머지)
  
  일부 언어에는 부호 연산자(-a, +a)도 있음
  
  피연산자 개수에 따라
  
  단항 연산자: 피연산자 1개 (-a, !a)
  
  이항 연산자: 피연산자 2개 (a + b)
  
  삼항 연산자: 피연산자 3개 (조건 ? 값1 : 값2)


4. 연산자 우선순위와 결합 방향

  여러 연산자가 함께 있을 때는 우선순위(priority) 에 따라 계산됨
    예: 2 + 3 * 4 → 3 * 4 먼저 계산 → 2 + 12 = 14
  
  같은 우선순위라면 결합 방향(associativity) 에 따라 계산
  
    예: a - b - c → 왼쪽에서 오른쪽으로 계산 ((a - b) - c)

5. 타입 변환 (Type Conversion)


  묵시적(자동) 변환: 언어가 알아서 변환
  
    예: 3 + 4.5 → 3이 자동으로 3.0으로 변환됨
  
  명시적(강제) 변환: 프로그래머가 직접 지정
  
    예: (int)3.7 → 결과는 3
    

6. 관계 연산자 (Relational Operators)

  두 값을 비교해서 참(true) 또는 거짓(false)을 반환
  
    예: >, <, >=, <=, ==, !=
  
  5 > 3 → true
  
  a == b → 같으면 true
  

7. 논리 연산자 (Logical Operators)

  논리값(true / false)을 다루는 연산자
  
  종류:
  
  - AND(논리곱): && → 둘 다 참이면 참
  
  - OR(논리합): || → 둘 중 하나라도 참이면 참
  
  - NOT(논리부정): ! → 참 ↔ 거짓 뒤집기
  
  단락 회로(short-circuit) 계산:
  
  불필요한 계산을 생략함
  
    예: false && something → 첫 번째가 거짓이므로 뒤는 안 봄

✅ 요약 한 줄
수식은 프로그램 안에서 값을 만들어내는 표현이며,
연산자와 피연산자의 조합, 타입 변환, 비교, 논리 연산 등이 포함된다.
