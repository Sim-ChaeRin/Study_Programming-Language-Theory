📘 복합타입 핵심 요약

🔹 복합타입 (Composite Type)

  정의: 여러 개의 데이터 요소를 묶어 하나의 단위로 표현하는 타입임
  
  특징: 서로 다른 데이터 혹은 같은 데이터 여러 개를 함께 다룸
  
  종류: 배열, 문자열, 연관배열, 구조체, 공용체, 포인터, 참조형 등이 있음


🔸 배열 (Array)

  정의: **동질형 데이터(같은 타입의 원소)**의 모음으로 구성된 타입임
  
  원소 구분: 첨자(index) 로 각 원소를 구별함
  
  차원(dimension): 배열에 사용되는 첨자의 개수
  
  주소 계산: 첨자를 통해 원소의 메모리 주소를 직접 계산할 수 있어야 함

  *저장 순서
  
    행우선(row-major): 같은 행의 원소를 먼저 저장함. (C 언어 등)
    
    열우선(column-major): 같은 열의 원소를 먼저 저장함. (Fortran 등)
    

🔸 문자열형 (String Type)

  정의: 문자열 데이터를 다루는 타입임
  
  데이터 집합: 가능한 모든 문자열의 집합임
  
  연산 집합: 언어에 따라
  
    대입(=)
    
    연결(+, concat)
    
    비교(==, <)
    
    부분 문자열 추출(substring) 등의 연산을 포함함
    

🔸 연관배열 (Associative Array, Map, Dictionary)

  정의: 동질형 데이터의 순서 없는 모음으로 구성된 타입임
  
  원소 구분: 키(key) 로 각 원소를 식별
  
  데이터 집합: 모든 (키 타입, 원소 타입) 쌍으로 구성
  
  연산 집합:
  
  원소 접근 (A["name"]) 추가, 삭제, 갱신 연산 포함됨
  

🔸 구조체 (Structure, Record)

  정의: 서로 다른 타입의 데이터를 묶은 복합 타입임
  
  필드 구분: 각 데이터 요소는 필드 이름(field name) 으로 구별
  
  데이터 집합: 필드 개수와 각 필드의 타입 조합에 따라 다양함
  
  연산 집합:
  
    초기화, 대입(=, 복사)
    
    필드 접근(. 연산자)
    

🔸 공용체 (Union)

  정의: 하나의 저장 공간을 여러 필드가 공유하는 타입임
  
  특징: 한 필드의 값이 바뀌면 다른 필드의 값도 영향을 받음
  
  필드 구분: 이름으로 구별함
  
  데이터 집합: 각 필드의 타입에 따라 다양함
  
  연산 집합: 각 필드 타입의 연산 집합을 따름
  

🔸 포인터형 (Pointer Type)

  정의: 데이터의 주소 자체를 데이터로 다루는 타입
  
  타입 지정: 가리키는 데이터의 타입은 사용자가 지정함
  
  데이터 집합: 가용한 메모리 주소들의 집합
  
  연산 집합:
  
    대입(p = &x)
    
    간접 참조(*p)
    
    주소 연산(+, - 등) 포함함
  

🔸 참조형 (Reference Type)

  정의: 기존 변수의 별칭(alias) 을 만들기 위한 타입
  
  특징: 참조형 변수는 원본 변수의 주소를 공유함
  
  데이터 집합, 연산 집합: 참조 대상 변수의 타입과 동일함
